<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	   default-init-method="init">

	<!-- 定义受环境影响易变的变量 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="false" />
		<property name="locations">
			<list>
				<value>classpath:app.properties</value>
			</list>
		</property>
	</bean>

	<context:component-scan base-package="org.hsq.wjg.demo;com.hsq.component.service.validation" />

	<bean class="org.hsq.wjg.demo.temp.City" >
		<property name="name" value="${cityName}" />
	</bean>

	<aop:aspectj-autoproxy />

	<!--<bean id="facadeParamValid" class="com.hsq.component.service.validation.FacadeParamValidationAop">
		<property name="errorCode" value="DEMO_WJG_000001" />
	</bean>
	<aop:config proxy-target-class="true">
		<aop:aspect ref="facadeParamValid">
			<aop:around method="doAround" pointcut="execution(public * org.hsq.wjg.demo.validation.TestValidationService.*(..))" />
		</aop:aspect>
	</aop:config>-->


	<!-- MA数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- sqlSessionFactory -->
	<!-- MyBatis在spring中Bean的配置，基本固定 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:sql/**/*.xml"/>
	</bean>

	<!-- 相当于context:component-scan，但是是采用mybatis扫描方式 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.hsq.wjg.demo" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- 事务控制 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<constructor-arg ref="transactionManager" />
	</bean>
	
	<!-- 声明使用注解式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"/>

	<import resource="dubbo.xml" />

</beans>
